* Route caching support

    When a path is firstly resolved through the route tree, we should
    cache the result for future calls.

    The path would be the cache key, the first route the value.

        1 - GET / -> first call, so browse the route tree
        2 - GET / -> second call, return cache('/');

* Conditions support for route matching: 

    get '/foo', {agent => 'Songbird (\d\.\d)[\d\/]*?'} => sub {
        ...
    };


 render should then use a template system for rendering the view 
 located in $views_directory/index.tpl with $stuff data 

* Template rendering support

    get '/' => sub {
        ...
        render index => $stuff;
    };
 
    Templates are assumed to be located directly under the ./views directory. To
    use a different views directory:

      set views =>  dirname(__FILE__) . '/templates'

* Static Files support

    Static files are served from the ./public directory. You can specify a
    different location by setting the 'public' option:

      set public => dirname(__FILE__) . '/static'

    Note that the public directory name is not included in the URL. A file
    ./public/css/style.css is made available as example.com/css/style.css. 

* Helper support

    We should provide a way to define helpers, that are basically, methods
    accessible from the action code blocks.

