* Route caching support

    When a path is firstly resolved through the route tree, we should
    cache the result for future calls.

    The path would be the cache key, the first route the value.

        1 - GET / -> first call, so browse the route tree
        2 - GET / -> second call, return cache('/');

* Conditions support for route matching: 

    get '/foo', {agent => 'Songbird (\d\.\d)[\d\/]*?'} => sub {
        ...
    };

* Template rendering support

    get '/' => sub {
        ...
        render index => $stuff;
    };
 
 render should then use a template system for rendering the view 
 located in $views_directory/index.tpl with $stuff data 

* Static files rendering support

    We should look for a directory 'public' in the root dir of the
    application. Each files located here should be served prior to
    any route defined.

