=head1 NAME

Dancer::Development - guide for developers interested in contributing

=head1 DESCRIPTION

This guide has been written to help developers of the project in their daily
needs. This guide is the reference for any developer working on Dancer. 

If you want to contribute code to Dancer you should first start by reading this
guide.


=head1 HOW TO CONTRIBUTE

There are many ways to contribute to the project. Dancer is a young yet avtice
project and any kind of help is appreciated.

=head2 Marketing

You don't have to start by hacking the code, spreadign the good words in
valuable as well. If you have a blog, just feel free to speak about Dancer.

If you're a twitter user, you can tweet about it with the hashtag C<#perl>.

=head2 Documentation

We do give lots of importance to documentation, but it's difficult to keep it
up-to-date and error-prone. If you find a typo or an error in a documentation
you can submit a patch with your fix (see "Patch submission").

=head2 Quality Assurance

We call "Quality Assurance" the fact that we keep in mind that Dancer should ne
able to install into all version of Perl since Perl 5.8, on any platforms.

We should avoid as much as possible regressions and backward compatibility
should be always in mind when refactoring.

=head2 Quality supervision

Our weapon for being aware of our quality is the CPAN testers platform: 
L<http://www.cpantesters.org>.

A good way to help the project is to find a failing build log on the CPAN
testers: L<http://www.cpantesters.org/distro/D/Dancer.html>

If you find a failing test report, feel free to report it as a GitHub issue:
L<http://github.com/sukria/Dancer/issues>.

=head2 Reporting bugs

We prefer to have all our bug reports on GitHub, in the issues section:
<http://github.com/sukria/Dancer/issues>. It's possible though to report bugs
on RT as well: L<https://rt.cpan.org/Dist/Display.html?Queue=Dancer>

Please make sure the bug you're reporting is not yet present, in doubt ask on
IRC.

=head2 Patch submission

The Dancer's development team uses GitHub to collaborate. Any contribution must
be submited via GitHub. Here is the workflow for submitting a patch:

=over 4 

=item *

Fork the repository L<http://github.com/sukria/Dancer>

=item *

Clone your fork like the following:

    $ git clone <PATH_TOUR_GIT_CLONE>

=item *

Apply your patch to your clone and then commit and push to your repository

    $ cd Dancer
    [ edit as many files as you need to build your patch ]
    $ git commit -m "DESCRIPTION OF THE PATCH"
    $ git push origin master

=item *

Send a I<pull request> via the GitHub interface.

It's also a good idea to summarize your work in a report sent to the users
mailing list, in order to make sure the team is aware of it.

=back

=head1 RESOURCES FOR DEVELOPERS

=head2 Mailing lists

A mailing list is available here:
L<http://lists.perldancer.org/cgi-bin/listinfo/dancer-users>

=head2 IRC channels

=head2 Repositories

=head1 CODING GUIDELINES

=head2 About dependencies

=head2 Branches

=head3 master

=head3 devel

=head3 feature-related branches

=head2 Perltidy

=head2 Tests

=head1 RELEASING

=head2 Public releases

=head2 Developer releases

=head2 Roadmap

=head1 AUTHOR

This document has been written by Alexis Sukrieh L<sukria@cpan.org>

